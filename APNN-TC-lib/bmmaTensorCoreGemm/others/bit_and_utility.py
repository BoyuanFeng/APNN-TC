# w = "574528ee 5d2aa02a 4cf15010 52a214fa 32e7ba61 2d357b57 184882df 47a35144 4d75bd23 2a0eaeec 2f31ba80 217dedaf 1a861652 0129747a 3d4f71a6 1e565b6a 12715a44 5c692df2 1f6f4752 65504cc9 4e5785aa 042408ac 2ab32c6b 25521f4a 16a4fb2f 4f3509ca 0ca1a2ad 584a5056 2a39fb9d 52a99e65 2a827cbc 017f248c 2fd43e8f 7773cccd 54213986 62bbf8f0"
# x = "7fdcc233 1befd79f 41a7c4c9 6b68079a 4e6afb66 25e45d32 519b500d 431bd7b7 3f2dba31 7c83e458 257130a3 62bbd95a 189a769b 54e49eb4 71f32454 2ca88611 0836c40e 02901d82 3a95f874 08138641 1e7ff521 7c3dbd3d 737b8ddc 6ceaf087 2463b9ea 5e884adc 51ead36b 2d517796 580bd78f 153ea438 3855585c 70a64e2a 6a2342ec 2a487cb0 1d4ed43b 725a06fb"

# x = "6b8b4567 327b23c6 643c9869 66334873 74b0dc51 19495cff 2ae8944a 625558ec 238e1f29 46e87ccd 3d1b58ba 507ed7ab 2eb141f2 41b71efb 79e2a9e3 7545e146 515f007c 5bd062c2 12200854 4db127f8 0216231b 1f16e9e8 1190cde7 66ef438d 140e0f76 3352255a 109cf92e 0ded7263 7fdcc233 1befd79f 41a7c4c9 6b68079a 4e6afb66 25e45d32 519b500d 431bd7b7 3f2dba31 7c83e458 257130a3 62bbd95a 436c6125 628c895d 333ab105 721da317 2443a858 2d1d5ae9 6763845e 75a2a8d4 32fff902 684a481a 579478fe 749abb43 3dc240fb 1ba026fa 79a1deaa 75c6c33a 12e685fb 70c6a529 520eedd1 374a3fe6 4f4ef005 23f9c13c 649bb77c 275ac794 39386575 1cf10fd8 180115be 235ba861 47398c89 354fe9f9 15b5af5c 741226bb 0d34b6a8 10233c99 3f6ab60f 61574095 7e0c57b1 77ae35eb 579be4f1 310c50b3 5ff87e05 2f305def 25a70bf7 1dbabf00 4ad084e9 1f48eaa1 1381823a 5db70ae5 100f8fca 6590700b 15014acb 5f5e7fd0 098a3148 799d0247 06b94764 42c296bd 5fb8370b 50801ee1 0488ac1a 5fb8011c 6aa78f7f 7672bd23 6fc75af8 6a5f7029 7d5e18f8 5f3534a4 73a1821b 7de67713 555c55b5 3fa62aca 14fce74e 6a3dd3e8 71c91298 09daf632 53299938 1fbfe8e0 5092ca79 1d545c4d 59adea3d 288f1a34 2a155dbc 1d9f6e5f 097e1b4e 51088277 1ca0c5fa 53584bcb 415e286c 7c58fd05       23d86aac 45e6d486 5c10fe21 0e7ffa2b 3c5991aa 4bd8591a 78df6a55 39b7aaa2 2b0d8dbe 6c80ec70 379e21b5 0069e373 2c27173b 4c9b0904 6aa7b75c 1df029d3"
# w = "631e22c1 603ea557 6a4376e0 5f69c330 26bba08c 1f494e05 4a495ddd 523e20ef 12c5229d 6dd2367d 274cd717 602a6fa5 3d2d3cbc 02ca49a6 6a355d28 01882c9d 4d159234 773c8b3e 033d51b3 4b98dbea 55e7c3e7 49d2139e 001b01f4 55dba830 5a48d2f8 06f7ce9c 2abbd4c6 1ebeb57c 12622f5a 4b0b780f 6a342c8b 7580521b 2b4a1d67 5477a36b 54ea154b 5205bdf3 73c0f171 1f337328 2443dee2 0686140e 0d05a9a5 4b90b5f9 66b083b3 4a32e662 4e5affa0 50e5e0db 4bbb12ff 1b7091d4 48226c1a 4ef864b2 67096dbe 1e0a3001 18ca7850 67246fb2 73e5d831 73134b48 6e1c3e4e 1ea1acf7 11d200c5 007e6da8 69ad2507 7c062d50 75febfc3 14f7426e 507dd0bb 4ae8d50e 66fd0061 443ec22c 6a1c4836 0b40df43 4ac4d63a 7721f1dc 56d1953d 317559ed 4154d83e 252c94dd 025b3ac9 0d0feb3d 409d26b1 4a7da6e3 5c084fef 27a6946f 6887d6e4 74d2c83f 0ecb0421 5c6daf16 67e61387 7ce7426f 7b0f5c0d 79b8144c 7d65b017 64bc8114 75be419c 73646fda 79b3c382 463c1258 3e4d44e8 60b0c3e3 0a7ad484 28698d1e 6bf1a327 553faabf 1f8b7efa 42c33864 06b504ac 60e05738 67efcd41 09103f75 6df04275 288cf3f2 538de658 49f89264 50338861 3c15bd3d 3ecb5aa3 5efe8c82 18836c53 26b16e2b 5be5cef1 1392c860 20698277 594b7f08 784f4975 1627c414 4cafeee2 72030cf7 5c63d66c 0afd33ca       52b3d0db 66deaaf0 3366c0e8 3ea57402 3c1e55af 52f23fe3 0168ac66 42d35a5c 33d2971b 695879a7 4be399d1 21c2d991 11e56d99 1f71802a 6bbb6bf5 6218f5fa"

W = ["6b8b4567 327b23c6 643c9869 66334873", "5d888a08 2a082c70 5ec6afd4 19e21bb2", "4695ae95 777a4eaa 3f48b982 46ba8fca", "2c06dcf3 2e129658 059f0446 030df306"]
X = ["ffffffff ffffffff ffffffff ffffffff"]*4

map = {'0':'0000', '1':'0001', '2':'0010', '3': '0011', '4':'0100', '5':'0101', '6':"0110", '7':'0111', '8':'1000', '9':'1001', 'a':'1010', 'b':'1011', 'c':'1100', 'd':'1101', 'e':'1110', 'f':'1111'}

def compute(w, x):
    val = 0
    for i in range(len(x)):
        if w[i] == ' ':
            continue
        tmp0 = map[w[i]]
        tmp1 = map[x[i]]
        for j in range(4):
            val += int(tmp0[j])*int(tmp1[j])
    return val

import numpy as np

data = np.zeros((4,4))

for i in range(4):
    for j in range(4):
        data[i,j] = compute(W[i], X[j])

print(data)

final_val = 0
for i in range(4):
    for j in range(4):
        final_val += data[i,j]*(2**(i+j))

print(final_val)


